Sockets → Low level endpoint used for processing information across a network. Commonly used in protocols like HTTP and FTP, because they rely on sockets to make the underneath connections. Basically, they are used to share information between two computers no matter where they are located.

"Client" socket → It's created with a socket() call, and the connected to a remote address with the connect() call, and then finally can retrieve data with the recv() call

socket() → Built-in function in C
connect()
recv()

"Server" socket → we need to create a socket with a socket() call, but then we need to bind() that socket to an IP and port where it can then listen() for connections, and then finally accept() a connection and then send() or recv() data to the other sockets it has connected to

socket()
bind()
listen()
accept()


HTTP → Protocol made on top of TCP Protocol, where it has a request/response cycle

HTTP Client → sends a request specifying a method and a resource
GET /index.html → Server

HTTP Server → responds with a response body, and a status code
Server → 200 OK <HTML></HTML> → Client 